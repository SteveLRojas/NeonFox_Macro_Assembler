Revision 1:
Created log from readme.
	Fixed bug that caused incorrect machine code for XEC instructions.  
	Fixed bug that cause incorrect values for literals represented in decimal.  
	Fixed one of the example files.  
	Changed get_label_address to look for labels in all segments.  
	Changed str_find_word to recognize comas and parentheses as word boundaries.  
	Added content to example files.  
	Fixed bug that caused incorrect segment addresses.  
	Fixed bug that caused the program size to be calculated incorrectly.  
	Added a function to generate MIF and COE files for Quartus and Vivado.  
	Removed HIGH and LOW keywords and replaced them with \`HIGH and \`LOW.  
		Labels can now begin with the words HIGH and LOW, and the new keywords can be applied to literals.  
	Added warning messages for NZT and XEC instructions when the target is out of range.  
	Added -DEBUG flag that can be used to enable debug output.  
	Fixed bug that caused incorrect rotation value for ADD, AND, and XOR instructions.  
	Fixed bug that caused EQU defines to replace only the first instance in each line.  
	Added error checking in MOVE, ADD, AND, and XOR instructions to ensure valid registers.  
	Added optional range specifier for XEC instruction.  
		Usage example: XEC KU_SWITCH (R6) [3].  
		This means that XEC will branch to one of 3 locations (R6 has value from 0 to 2).  
	Added support for char literals.
	
Revision 2:
	Added labels to debugging output.

Revision 3:
	Created NeonFox Assembler project.
	Copied source from RIPTIDE Assembler.
	Created NeonFox_Assembler.h
	Moved data structures, constants, and function declarations to h file.
	Created new lists of recognized mnemonics and keywords.
	Created new function declarations for machine code functions.
	Removed old machine code functions.
	Created new machine code functions.

Revision 4:
	Added code to properly check for overlap between segments (sorts segments before checking).
	Added hash map for labels and checks to make sure labels are not declared more than once.
	Fixed bug in BRN, BRZ, BRNN, and BRNZ instructions (encoding for N and Z was swapped).
	Fixed bug in include functionality (files were getting included at the start of the file and multiple includes resulted in infinite loop).
	Fixed bug in m_bit function.

Revision 5:
	Created new NeonFox_Macro_Assembler project from NeonFox_Assembler.
	Added code to handle macros in preprocessor pass.
	Added support for lowercase file names and char literals.
	Addes support for spaces in file names and char literals.
	Removed unused parameters in multiple functions.
	Cleaned up code (added explicit type conversions to avoid warnings).
	
Revision 6:
    Added support for labels on macro references.
    Fixed bug in macro processor (use str_comp_word instead of str_comp_partial).
	
